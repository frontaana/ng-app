import { Entity } from "../core/interfaces/properties";

// questions
export enum Level {
  zero = 0,
  one = 1,
  two = 2,
  three = 3,
  four = 4,
}

// themes, questions
export enum Category {
  ts,
  js,
  html,
  css,
  arch,
  tools,
  prot,
  node
}

// type ThemeEntity = Partial<Entity>;
type ThemeEntity = Pick<Entity, 'title'>;


interface Theme extends ThemeEntity {
  competence: Category;
}

interface Question extends ThemeEntity {
  competence: Category;
  level: Level;
  completed: boolean;
}

// target info format
export const js_questions_view: Question[] = [
  {
    title: 'Понимание концепции и смысла DOM',
    competence: Category.js,
    level: Level.one,
    completed: false,
  },
];
  
export const js_themes_view: Theme[] = [
  {
    title: 'DOM',
    competence: Category.js,
  },
];

// js
export const js_themes_response = `DOM. Client-side storage. События. Синтаксис. Встроенные объекты и типы данных. Память и быстродействие. Асинхронность. Critical Rendering Path.`;

export const js_questions_response = [
  {
    title: `Понимание концепции и смысла DOM. Синтаксис. Переменные, всплытие, замыкание, context. Встроенные структуры данных + методы. 
    Асинхронность (async, await, promise). Fetch.`,
    level: 1
  },
  {
    title: `Работа с методами DOM (Вставка, удаление, редактирование, поиск и т.д). Знание стандартов ES. Генераторы/Итераторы. ESM/AMD/UMD. 
    Cookie, LocalStorage, SessionStorage. XMLHTTPRequest (Axios).`,
    level: 2
  },
  {
    title: `Работа с прототипами. Умение оптимизировать код. Умение составлять и оптимизировать регулярные выражения. Browser API. Critical Rendering Path.`,
    level: 3
  },
  {
    title: `Создание и использование сложных веб-компонентов, обеспечивающих высокую масштабируемость. Опыт работы с виртуальным DOM для улучшения производительности. Реализация локальной синхронизации данных с сервером. Управление структурой баз данных в IndexedDB для оптимизации производительности. Оптимизация события для высоко нагруженных приложений (debounce, throttle). Интеграция событий во фреймворки и библиотеки. Проектирование и реализация сложных асинхронных цепочек с использованием промисов.`,
    level: 4
  },
]

// html
export const html_themes_response = `Markup. Accessibility. SEO Optimization. Document Rendering Path. Reference Tags.`;

export const html_questions_response = [
  {
    title: `Способность выполнять базовую разметку документа, включая использование корректных тегов для типов контента. Работа с атрибутами тегов. Базовое понимание принципов доступности и текущего стандарта WAI-ARIA. Понимание функций и функциональности основных тегов ссылок: <script />, <link />, <iframe />. Базовое понимание принципов оптимизации SEO, включая метатеги, корректную структуру URL и навигацию.`,
    level: 1
  },
  {
    title: `Уверенная работа с современной разметкой HTML5, использование всех доступных семантических элементов. Проведение валидации HTML-кода, исправление ошибок и предупреждений. Твердое понимание принципов доступности, способность создавать сайты, доступные для людей с ограниченными возможностями. Осознание влияния онлайнскриптов и стилей на загрузку и отображение страницы, использование async и defer. Продвинутое понимание тегов ссылок, включая параметризацию и оптимизацию подгрузку ресурсов. Применение продвинутых методов оптимизации SEO, включая корректное применение микроразметки, улучшение скорости загрузки страниц и оптимизацию пользовательского опыта.`,
    level: 2
  },
  {
    title: `Оптимизация HTMLструктуры для максимального быстродействия, SEO и удобства масштабирования и поддержки. Автоматизация процессов создания и оптимизации HTML с помощью сборщиков и шаблонизаторов. Универсальное проектирование интерфейсов с учетом всех аспектов доступности. Проведение тестирования сайта на доступность и внесение необходимых доработок для обеспечения доступности на всех уровнях WCAG. Оптимизация времени загрузки страницы и рендеринга контента. Оптимизация ресурсов для уменьшения блокировки отображения страницы. Способность полного контроля и оптимизации работы с внешними ресурсами. Глубокое знание и использование всех современных методов SEO. Работа с поисковыми системами и счетчиками статистики, управление индексацией сайта.`,
    level: 3
  },
  {
    title: `Инжекция и управление динамической разметкой с помощью JS (например, использование шаблонов). Оптимизация размера HTMLстраницы за счет уменьшения повторений и использования соглашений об именовании. Ведение практик и стандартов доступности на уровне команды. Обеспечение полной поддержки и доступности для всех ассистивных технологий. Анализ и устранение проблем SEO с использованием аудиторских инструментов (Google Search Console, Screaming Frog). Ведение и оптимизация политики внутренних и внешних ссылок. Создание и внедрение принципов быстрого рендеринга (critical path) на уровне команды. Контроль и оптимизация загрузки всех сторонних ресурсов.`,
    level: 4
  },
]

// css
export const css_themes_response = `Layers. Animations. Z-Index. Markup (Flex / Grid). Кроссбраузерная верстка. Адаптивная верстка. Специфичность.`;

export const css_questions_response = [
  {
    title: `Базовое понимание стека слоев и как различные CSS-свойства могут влиять на этот стек. Знание и умение применять базовые CSS-анимации и переходы. Понимание функционала свойства z-index и простейшего управления уровнями наложения элементов. Знание и использование основ Flexbox для построения линейных макетов. Базовое понимание и использование CSS Grid. Умение создавать простые макеты с помощью адаптивной верстки для поддержки различных разрешений экранов. Понимание важности адаптивной верстки для улучшения пользовательского опыта и увеличения доступности вебприложений.`,
    level: 1
  },  {
    title: `Понимание свойств изолирующих новые стековые контексты и их воздействия на отрисовку. Владение анимациями и переходами, включая keyframes и анимацию сложных свойств. Умение управлять порядком наложения элементов при помощи z-index в сложных раскладках. Использование Flexbox и CSS Grid для построения сложноструктурированных макетов. Подробное знание методов и технологий адаптивной верстки, таких как flexbox, grid, viewport units и т. д. Навыки создания сложных адаптивных макетов с учетом различных устройств и браузеров.`,
    level: 2
  },  {
    title: `Профессиональное владение стеком слоев, управление композитными слоями. Профессиональное использование анимаций и переходов, оптимизация производительности анимаций. Управление порядком наложения элементов для создания сложных визуальных эффектов. Использование всех подходов упорядочения элементов, включая приемы реагирования и расширяемого дизайна. Умение оптимизировать адаптивную верстку для достижения высокой производительности и качества отображения на различных устройствах. Навыки тестирования адаптивного дизайна и внесения корректировок для обеспечения оптимального пользовательского опыта.`,
    level: 3
  },  {
    title: `Проектирование и реализация многослойных интерфейсов с учетом производительности и доступности. Управление сложными графическими элементами и наложениями. Оптимизация анимаций с учетом производительности, включение принципов управляемой анимации. Создание пользовательских анимационных библиотек для значительных проектов. Разработка стандартов управления z-index и наложением в крупных проектах. Проектирование систем обработки наложения элементов в сложных пользовательских интерфейсах. Создание сложных и адаптивных сеток с использованием комбинации Flexbox и CSS Grid. Управление поведением элементов в зависимости от различных медиа-запросов и факторов размещения. Внедрение и контроль на практике лучших рекомендаций по кроссбраузерной разработке. Поддержка и улучшения функциональности на устаревших браузерах при минимальном измении кода. Разработка автогенерации и структурирования CSS с учетом специфичности. Настройка систем для автоматического отслеживания и оптимизации специфичности. Глубокое понимание аспектов UX/UI дизайна и их взаимосвязь с адаптивной версткой. Умение разрабатывать стратегии адаптивной верстки, учитывая требования проекта и потребности пользователей. Лидерство в области обучения и наставничества, а также способность консультировать команду по лучшим практикам адаптивной верстки.`,
    level: 4
  },
];

// ts
export const ts_themes_response = `Basics. Union and Intersection Types. Decorators. Mixins. Generics. Выводы типов.`;

export const ts_questions_response = [
  {
    title: `Синтаксис (кроме generics).`,
    level: 1
  },  {
    title: `Вывод типов. Конфугурация компилятора. Generics.`,
    level: 2
  },  {
    title: `Умение писать сложные типы. Глобальное определение. Типизация внешних зависимостей (Модули).`,
    level: 3
  },  {
    title: `Разработка и внедрение корпоративных стандартов использования TypeScript. Полное понимание трансформации кода из TypeScript в JavaScript. Дизайн и внедрение сложных систем типов с использованием объединённых и пересекающихся типов. Понимание и управление сложными сценариями использования типов, включая охранные выражения (type guards) и утверждения (type assertions). Разработка и поддержка библиотек декораторов. Интеграция декораторов с метапрограммированием и рефлексией. Проектирование и внедрение комплексных систем с использованием миксинов. Обеспечение совместимости и распределение обязанностей в рамках миксинов. Внедрение комплексных архитектур с использованием обобщённых типов в различных частях системы. Использование передовых методик оптимизации через обобщённые типы. Проведение анализа и оптимизация сложных механизмов вывода типов. Реализация и документирование кастомных решений по выводу типов в системах.`,
    level: 4
  },
];

// architecture
export const architecture_themes_response = `Feature-Sliced Design / Atomic Design. Способы рендеринга приложения (SSR, SSG, CSR, ISR)`;

export const architecture_questions_response = [
  {
    title: `Знание о том что есть и примерный принцип работы (SSR, SSG). Знание о различии между SSR и клиентским рендерингом (CSR) и преимуществах SSR. Умение работать с фреймворками, которые поддерживают SSR, такими как Next.js в React или Nuxt.js в Vue.`,
    level: 1
  },  {
    title: `Знание Feature-Sliced Design / Atomic Design. Понимание реактивной архитектуры. Понимание SOLID / DI. Подробное знание о том, как SSR взаимодействует с клиентской частью приложения и сервером. Навыки оптимизации SSR для улучшения производительности и опыта пользователей. Умение проектировать архитектуру приложения с использованием SSR для максимальной эффективности.`,
    level: 2
  },  {
    title: `Способы рендеринга приложения (SSR, SSG, CSR, ISR). Понимание и использование SOLID / DI. Паттерны проектирования GoF. Микрофронты (Основы). Умение консультировать других разработчиков по использованию SSR в их проектах. Принятие стратегических решений по применению SSR в проектах и реализация передовых практик для оптимизации работоспособности и производительности веб-приложений.`,
    level: 3
  },  {
    title: `Внедрение и сопровождение стандартов разработки с использованием Feature-Sliced Design в команде и на проекте. Создание библиотек компонентов и настройка их интеграции в проект, используя Atomic Design. Разработка и применение стандартов, основанных на принципах SOLID, для всей команды. Проводка архитектурных ревизий кода, чтобы обеспечить соответствие KISS и DRY на всех этапах разработки. Способы рендеринга приложения (SSR, SSG, CSR, ISR). Разработка архитектурных шаблонов и решений для улучшения всех аспектов рендеринга, включая SSR, SSG, CSR и ISR. Руководство оптимизацией рендеринга и выполнение анализа производительности для больших, сложных приложений.`,
    level: 4
  },
];

// dev_tools
export const dev_tools_themes_response = `IDE (VSCode, WebStorm). Владение инструментами отладки. Владение инструментами оптимизации рутинных процессов - Форматеры, Линтеры. Владение одним или несколькими инструментами сборки. Отдельно - умение написать custom plugins, понимание как это работает. Менеджеры пакетов (NPM / YARN / PNPM / BUN). Отдельно - понимание как собрать пакет, виды модулей.`;

export const dev_tools_questions_response = [
  {
    title: `Умение использовать IDE и настраивать её под проект. Умение пользоваться инструментами отладки (браузерный DevTools). Знание основных команд для установки, обновления и удаления пакетов. Знание основных принципов работы форматеров и их цели. Умение устанавливать и настраивать форматеры (например, Prettier) для автоматического форматирования кода. Знание базовых правил линтеров и их цели в процессе разработки. Умение настраивать и запускать линтеры (например, ESLint для JavaScript) в проекте.`,
    level: 1
  },  {
    title: `Конфигурирование Eslint и Prettier. Продвинутое использование инструментов отладки. Настройка сборщика с помощью готовых плагинов и документации. Умение настраивать монорепозиторий. Подробное знание возможностей менеджеров пакетов, включая работу с версиями пакетов, локальными и глобальными установками и хранением зависимостей. Навыки решения конфликтов зависимостей и оптимизации управления пакетами. Подробное знание возможностей форматеров, включая расширенные настройки форматирования и интеграцию с различными редакторами. Навыки работы с различными стилями форматирования и настройками форматеров для удовлетворения требований проекта. Подробное знание возможностей линтеров, включая конфигурацию, расширения и интеграцию с различными редакторами и средами разработки. Навыки оптимизации конфигураций линтеров и их использования для улучшения командной работы и качества кода.`,
    level: 2
  },  {
    title: `Профилирование и оптимизация Умение написать custom плагин/модуль для сборщика Умение настроить и опубликовать npm пакет Умение создавать файлы зависимостей (например, package.json, requirements.txt) и управлять зависимостями в проектах с использованием различных менеджеров. Навыки использования инструментов для анализа и обновления устаревших зависимостей. Умение интегрировать форматеры в процесс разработки и совместно использовать их с линтерами. Навыки оптимизации конфигураций форматеров и их использования для соблюдения стандартов кодирования и улучшения коллективного кодирования. Экспертиза в области линтеров, включая глубокое понимание принципов и алгоритмов работы статического анализа кода. Знание передовых инструментов и методов, связанных с линтерами, таких как автоматическое исправление и анализ кода.`,
    level: 3
  },  {
    title: `Разработка инструментов и расширений для IDE. Настройка и поддержка коллективной среды разработки и инструментов. Руководство процессом отладки на проектном уровне. Создание универсальных методологических рекомендаций по отладке для всей команды. Внедрение и управление процессами DevOps для автоматизации сборки и развертывания. Оптимизация и автоматизация CI/CD процессов. Разработка и внедрение корпоративных конфигураций и их поддержка. Умение написать регулировки для специфичных задач команды. Проектирование гибкой, но эффективной архитектуры сборочного процесса. Настройка сборочных пайплайнов для эффективного использования ресурсов. Внедрение поддержки и сопровождение кастомных плагинов. Оптимизация работы готовых плагинов под требования и особенности организации. Разработка и поддержка системы деплоймента и управления версиями. Внедрение автоматических процессов обновления и тестирования пакетов. Поддержка и развитие сложной инфраструктуры для библиотеки корпоративных пакетов. Внедрение новых стандартов и типов модулей на уровне организации. Умение разрабатывать стратегии управления зависимостями на уровне проекта и организации. Лидерство в применении лучших практик для обеспечения безопасности, производительности и эффективности использования менеджеров пакетов в разработке программного обеспечения. Умение разрабатывать и внедрять стратегии использования форматеров в больших проектах с большим количеством разработчиков. Знание передовых методов и инструментов автоматизации форматирования для оптимизации рабочих процессов. Умение разрабатывать и настраивать сложные конфигурации линтеров, учитывая специфику проекта и требования качества кода. Лидерство в организации процесса обучения и внедрения линтеров в команду разработчиков, а также в управлении их использованием для достижения высокой производительности и качества разработки ПО.`,
    level: 4
  },
];

// protocols
export const protocols_themes_response = `TCP/UDP + IP(v4/v6) + DNS + HTTP + TLS/SSL. REST API. GraphQL. WebSocket, SSE.`;

export const protocols_questions_response = [
  {
    title: `Ориентирование в концепциях REST API.`,
    level: 1
  },  {
    title: `Что такое и зачем нужно WebSockets, SSE. Что такое и зачем нужно HTTP и DNS. CORS. Проксирование. Адресация IP в сети.`,
    level: 2
  },  {
    title: `Понимание принципов работы TLS/SSL. Понимание работы с GraphQL. Понимание работы с WebSockets, SSE.`,
    level: 3
  },  {
    title: `Проектирование и внедрение сложных сетевых архитектур. Настройка балансировщиков нагрузки и архитектуры высокой доступности (HA). Руководство разработкой и внедрением API на уровне организации. Интеграция API с различными системами и микросервисами. Проектирование и внедрение сложных схем и иерархий запросов. Разработка и внедрение стратегий безопасности и доступов к данным в GraphQL. Проектирование высоконагруженных WebSocket систем для масштабных проектов. Внедрение продвинутых механизмов аутентификации и шифрования данных.`,
    level: 4
  },
];

// nodejs
export const nodejs_basics_themes_response = ``;

export const nodejs_basics_questions_response = [
  {
    title: `Умение устанавливать Node.js на компьютер и запускать JavaScriptскрипты с помощью Node.js. Понимание основных модулей Node.js.`,
    level: 1
  },  {
    title: `Умение создавать веб-приложения с использованием Express.js и понимание механизмов маршрутизации (routing) в Express. Знание основ работы с базами данных в Node.js (например, использование ORM или библиотеки для взаимодействия с БД). Основы создания RESTful API с помощью Node.js и Express, включая обработку запросов, маршрутизацию и отправку ответов.`,
    level: 2
  },  {
    title: `Понимание концепции микросервисов и их реализация с использованием Node.js для расширяемых и масштабируемых приложений. Экспертное знание асинхронных паттернов программирования в Node.js, таких как промисы, async/await, и глубокое понимание работы event loop.`,
    level: 3
  },  {
    title: ``,
    level: 4
  },
];
